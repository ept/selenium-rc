<project name="selenium-rc-top" default="all">
<description>Builds Selenium RC from the top-level.  Start here!</description>
	<target name="init">
		<property environment="env" />
		<property name="maven.home" value="${env.MAVEN_HOME}" /> <!-- override this if necessary -->
		<condition property="build.failed">
		    <not><available file="${maven.home}" /></not>
		</condition>
		<fail if="build.failed" message="Couldn't find MAVEN_HOME.  (Did you set the MAVEN_HOME environment variable correctly?)&#xa;Maven Home: ${maven.home}" />
		<property name="mvn.overrideable.settings" value="" />

		<condition property="property.file.name" value="build.windows.properties">
			<os family="windows" />
		</condition>

		<condition property="property.file.name" value="build.unix.properties">
                        <os family="unix" />
                </condition>

		<property file="${property.file.name}" />

		<condition property="mvn.skip.test.arg" value="-Dmaven.test.skip=true" >
		    <isset property="skiptests" />
		</condition>

		<property name="mvn.skip.test.arg" value="-Dmaven.test.skip=false " />
		<presetdef name="mvn">
			<java classname="org.codehaus.classworlds.Launcher" fork="true" failonerror="true">
				<!--<jvmarg value="-Xdebug"/>
				<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000"/>
				<jvmarg value="-Xnoagent"/>
				<jvmarg value="-Djava.compiler=NONE"/>-->
				<classpath>
					<fileset dir="${maven.home}/core/boot" includes="classworlds-*.jar" />
				</classpath>
				<sysproperty key="classworlds.conf" value="${maven.home}/bin/m2.conf" />
				<sysproperty key="maven.home" value="${maven.home}" />
				<arg value="${mvn.skip.test.arg}" />
				<arg value="-DfirefoxDefaultPath=${firefox.location}" />
				<arg value="-DoperaDefaultPath=${opera.location}" />
				<arg value="-DinternetExplorerDefaultPath=${ie.location}" />
				<arg value="-DmshtaDefaultPath=${mshta.location}" />
				<arg line="${mvn.overrideable.settings}" />
			</java>
		</presetdef>
		<mvn outputproperty="ignore.output" failonerror="false" resultproperty="mvn.noargs.should.be.1" />
		<condition property="build.failed">
			<not><equals arg1="1" arg2="${mvn.noargs.should.be.1}" /></not>
		</condition>
		<fail if="build.failed" message="mvn is not appropriately failing on error...&#0010;You may be affected by maven bug 2127 http://jira.codehaus.org/browse/MNG-2127" />
		<echo message="mvn appears to be able to fail on error" />
		
	</target>

	<target name="maven" depends="init" description="Builds just the Maven stuff">
		<mvn>
			<arg value="install" />
		</mvn>
	</target>

	<target name="maven-skiptest-init">
		<property name="mvn.overrideable.settings" value="-Dmaven.test.skip=true" />
	</target>
	
	<target name="maven-skiptest" depends="maven-skiptest-init, maven" description="Builds the Maven stuff, skipping the automated tests" />

	<target name="all" depends="clean, init, maven" description="Builds everything">
		<ant dir="clients" target="all"/>
	</target>

	<target name="maven-clean" depends="init">
		<mvn>
			<arg value="clean" />
		</mvn>
	</target>
	
	<target name="maven-deploy" depends="init">
		<mvn>
			<arg value="deploy" />
		</mvn>
	</target>
	
	<target name="maven-deploy-skiptest" depends="init">
		<mvn>
			<arg value="deploy" />
			<arg value="-Dmaven.test.skip=true" />
		</mvn>
	</target>

	<target name="clean" depends="init, maven-clean" description="Cleans everything">
		<ant dir="clients" target="clean"/>
	</target>

	<target name="openqa-upload"
		description="Upload artifacts to OpenQA"
		depends="maven-deploy-skiptest">
		<echo message="Uploaded to OpenQA"/>
	</target>

</project>
