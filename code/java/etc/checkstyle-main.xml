<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:
    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html
    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/
    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html
    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html
    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">

    <!-- Checks that a package.html file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
    <module name="PackageHtml">
        <property name="severity" value="warning"/>
    </module>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>

    <module name="TreeWalker">
        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocType">
            <!-- Version tag must be $ID junk$ -->
            <property name="versionFormat" value="\$Id.*\$$"/>
            <property name="severity" value="warning"/>
        </module>
        <module name="JavadocMethod">
            <property name="scope" value="package"/>
            <property name="severity" value="warning"/>
        </module>
        <module name="JavadocVariable">
            <property name="scope" value="package"/>
            <property name="severity" value="warning"/>
        </module>
        <module name="JavadocStyle"/>

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>
        <module name="AbstractClassName">
            <property name="format" value="^Abstract.*$"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- Checks for Headers                                -->
        <!-- See http://checkstyle.sf.net/config_header.html   -->
         <module name="Header">
             <property name="headerFile" value="${etc.dir}/classheader.txt"/>
         </module>

        <!-- Following interprets the header file as regular expressions. -->
        <!-- <module name="RegexpHeader"/>                                -->

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="ExecutableStatementCount">
            <property name="max" value="10"/>
        </module>
        <module name="FileLength"/>
        <module name="LineLength">
            <property name="max" value="120"/>
        </module>
        <module name="AnonInnerLength"/>
        <module name="ParameterNumber">
           <property name="max" value="7"/>
           <property name="tokens" value="METHOD_DEF"/>
           <property name="severity" value="warning"/>
        </module>
        <!-- TODO - remove this -->
        <module name="ParameterNumber">
           <property name="max" value="15"/>
           <property name="tokens" value="METHOD_DEF"/>
        </module>
        <module name="ParameterNumber">
           <property name="max" value="6"/>
           <property name="tokens" value="CTOR_DEF"/>
        </module>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="TabCharacter"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <!--<module name="RedundantModifier"/>-->

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly">
            <property name="option" value="eol"/>
        </module>
        <module name="NeedBraces"/>

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!-- <module name="AvoidInlineConditionals"/> -->
        <module name="DoubleCheckedLocking"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
<!--        <module name="HiddenField"/>-->
        <module name="IllegalInstantiation"/>
        <!--module name="IllegalToken">
            <property name="tokens" value="POST_INC, POST_DEC"/>
        </module-->
        <module name="IllegalType">
            <property name="severity" value="warning"/>
        </module>

        <module name="InnerAssignment"/>
        <module name="MagicNumber">
            <property name="ignoreNumbers" value="-1,0,1"/>
        </module>
        <module name="MissingSwitchDefault"/>
<!--        <module name="RedundantThrows">-->
<!--            <property name="severity" value="warning"/>-->
<!--        </module>-->
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="ParameterAssignment"/>
        <module name="NestedIfDepth"/>
        <module name="NestedTryDepth"/>
        <module name="IllegalCatch"/>
        <module name="ReturnCount"/>
        <module name="PackageDeclaration"/>
        <module name="ExplicitInitialization">
            <property name="severity" value="warning"/>
        </module>
<!--        <module name="au.com.redhillconsulting.jamaica.tools.checkstyle.NullPointerCheck">-->
<!--            <property name="severity" value="warning"/>-->
<!--        </module>-->
        <module name="au.com.redhillconsulting.jamaica.tools.checkstyle.GuardingIfCheck"/>
        <module name="au.com.redhillconsulting.jamaica.tools.checkstyle.ReturnFromCatchCheck">
            <property name="severity" value="warning"/>
        </module>
        <module name="au.com.redhillconsulting.jamaica.tools.checkstyle.ReturnFromFinallyCheck">
            <property name="severity" value="warning"/>
        </module>
        <module name="au.com.redhillconsulting.jamaica.tools.checkstyle.FinalFieldCheck">
            <property name="severity" value="warning"/>
        </module>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>
        <module name="MutableException"/>
        <module name="ThrowsCount"/>
<!--        <module name="au.com.redhillconsulting.jamaica.tools.checkstyle.MissingAbstractionCheck">-->
<!--            <property name="severity" value="warning"/>-->
<!--        </module>-->

        <!-- Metrics checks                                -->
        <!-- See http://checkstyle.sf.net/config_metrics.html -->
        <module name="CyclomaticComplexity">
            <property name="severity" value="warning"/>
        </module>
        <module name="au.com.redhillconsulting.jamaica.tools.checkstyle.NPathComplexityCheck">
            <property name="severity" value="warning"/>
        </module>

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="GenericIllegalRegexp">
            <property name="format" value="\s+$"/>
            <property name="message" value="Line has trailing spaces."/>
        </module>
        <module name="GenericIllegalRegexp">
            <property name="format" value="throw new .*\.getMessage.*;"/>
            <property name="message" value="Cannot use getMessage() in throwable instantiation."/>
        </module>
        <module name="GenericIllegalRegexp">
            <property name="format" value="System\.out|System.\err|\.printStackTrace"/>
            <property name="message" value="Don't use System.out, System.err or printStackTrace for logging"/>
            <property name="severity" value="warning"/>
        </module>
        <module name="GenericIllegalRegexp">
            <property name="format" value="System\.exit"/>
            <property name="message" value="Don't use System.exit()"/>
            <property name="severity" value="warning"/>
        </module>
        <module name="TodoComment"/>
        <module name="UpperEll"/>

        <!-- Usage checks                                   -->
        <!-- See http://checkstyle.sf.net/usage_checks.html -->
<!--        <module name="usage.UnusedLocalVariable"/>-->
<!--        <module name="usage.UnusedPrivateField"/>-->
<!--        <module name="usage.UnusedPrivateMethod"/>-->
    </module>

</module>
