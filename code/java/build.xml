<project name="selenium" default="all">
    <property name="version" value="0.1.3-SNAPSHOT"/>

    <property environment="env"/>
    <property name="ant.home" location="${env.ANT_HOME}"/>
    <property name="reports.dir" location="target/reports" />
    <property name="checkstyle.reports.dir" location="${reports.dir}/checkstyle" />
    <property name="checkstyle-tests.reports.dir" location="${reports.dir}/checkstyle-tests" />
    <property name="simian.reports.dir" location="${reports.dir}/simian" />
    <property name="jcoverage.reports.dir" location="${reports.dir}/jcoverage" />
    <property name="test.reports.dir" location="${reports.dir}/tests" />
    <property name="integration.test.reports.dir" location="${reports.dir}/integration-tests" />
    <property name="test.logs.dir" location="${test.reports.dir}/logs" />
    <property name="integration.test.logs.dir" location="${integration.test.reports.dir}/logs" />
    <property name="main.dir" location="main" />
    <property name="test.dir" location="test" />
    <property name="integration.test.dir" location="integration-test" />
    <property name="etc.dir" location="etc" />
    <property name="lib.dir" location="lib" />
    <property name="report.lib.dir" location="${lib.dir}/report" />
    <property name="classes.dir" location="target/classes" />
    <property name="instrumented.classes.dir" location="target/instrumented-classes" />
    <property name="test.classes.dir" location="target/test-classes" />
    <property name="integration.test.classes.dir" location="target/integration-test-classes" />

    <path id="report.classpath">
        <fileset dir="${report.lib.dir}"/>
    </path>

    <path id="classpath">
        <fileset dir="lib"/>
        <pathelement location="${classes.dir}"/>
        <pathelement location="${test.classes.dir}"/>
        <pathelement location="${integration.test.classes.dir}"/>
        <pathelement location="${ant.home}/lib"/>
    </path>

    <path id="instrumented.classpath">
        <fileset dir="lib"/>
        <pathelement location="${instrumented.classes.dir}"/>
        <pathelement location="${test.classes.dir}"/>
        <pathelement location="${integration.test.classes.dir}"/>
        <pathelement location="${ant.home}/lib"/>
    </path>

    <target name="all" depends="clean, init, checkstyle, compile, test, integration-test, report, jar"/>

    <target name="clean">
        <delete dir="target"/>
        <delete file="jcoverage.ser"/>
    </target>

    <target name="init">
        <mkdir dir="${reports.dir}"/>
        <mkdir dir="${checkstyle.reports.dir}"/>
        <mkdir dir="${checkstyle-tests.reports.dir}"/>
        <mkdir dir="${simian.reports.dir}"/>
        <mkdir dir="${jcoverage.reports.dir}"/>
        <mkdir dir="${test.reports.dir}"/>
        <mkdir dir="${integration.test.reports.dir}"/>
        <mkdir dir="${test.logs.dir}"/>
        <mkdir dir="${integration.test.logs.dir}"/>
    </target>

    <target name="compile-main" description="Compile java source">
        <mkdir dir="${classes.dir}"/>
        <javac destdir="${classes.dir}" classpathref="classpath" debug="on">
            <src location="${main.dir}"/>
        </javac>

        <mkdir dir="${test.classes.dir}"/>
        <javac destdir="${test.classes.dir}" classpathref="classpath" debug="on">
            <src location="${test.dir}"/>
        </javac>

        <mkdir dir="${integration.test.classes.dir}"/>
        <javac destdir="${integration.test.classes.dir}" classpathref="classpath" debug="on">
            <src location="${integration.test.dir}"/>
        </javac>
    </target>

    <target name="compile" depends="compile-main, -instrument-main"/>

    <target name="test" depends="compile-main">
        <junit fork="yes" forkmode="once" printsummary="yes" failureproperty="tests.failed">
            <classpath refid="instrumented.classpath"/>
            <formatter type="xml"/>
            <formatter type="plain"/>
            <batchtest todir="${test.logs.dir}">
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                    <include name="**/*TestCase.java"/> 
                    <exclude name="com/thoughtworks/selenium/SeleniumIntegrationTest.java"/>
                </fileset>
            </batchtest>
        </junit>

        <junitreport todir="${test.reports.dir}">
            <fileset dir="${test.logs.dir}">
                <include name="TEST-*.xml"/>
                <!-- This one is always empty for some reason -->
                <exclude name="TEST-com.thoughtworks.selenium.SeleniumIntegrationTest.xml"/>
            </fileset>
            <report format="frames" todir="${test.reports.dir}" styledir="${ant.home}/etc"/>
        </junitreport>
        <fail if="tests.failed">There were test failures</fail>
    </target>

    <target name="integration-test" depends="compile-main">
        <junit fork="yes" forkmode="once" printsummary="yes" failureproperty="tests.failed">
            <classpath refid="instrumented.classpath"/>
            <formatter type="xml"/>
            <formatter type="plain"/>
            <batchtest todir="${integration.test.logs.dir}">
                <fileset dir="${integration.test.dir}">
                    <include name="**/*Test.java"/>
                    <include name="**/*TestCase.java"/> 
                    <exclude name="**/RealDealIntegrationTest.java"/>
                </fileset>
            </batchtest>
        </junit>

        <junitreport todir="${integration.test.reports.dir}">
            <fileset dir="${integration.test.logs.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${integration.test.reports.dir}" styledir="${ant.home}/etc"/>
        </junitreport>
        <fail if="tests.failed">There were test failures</fail>
    </target>

    <target name="jar" depends="compile-main" description="Jar java classes">
        <jar basedir="target/classes" destfile="target/${ant.project.name}-${version}.jar"/>
    </target>

    <target name="report" depends="-checkstyle-tests,-simian,-coverage-report"/>

    <!-- ================== Checkstyle target Definitions ======================= -->
    <target name="checkstyle" depends="init" description="Validate code against coding standards">
        <taskdef resource="checkstyletask.properties" classpathref="report.classpath"/>

        <checkstyle config="${etc.dir}/checkstyle-main.xml" failureProperty="checkstyle.failed" failonviolation="false">
            <fileset dir="${main.dir}">
                <exclude name="Acme/**"/>
                <include name="**/*.java"/>
            </fileset>
            <formatter type="xml" tofile="${checkstyle.reports.dir}/checkstyle-main-errors.xml"/>
        </checkstyle>

        <style  in="${checkstyle.reports.dir}/checkstyle-main-errors.xml"
                out="${checkstyle.reports.dir}/checkstyle.html"
                style="${etc.dir}/checkstyle-noframes.xsl"/>

        <!--           <fail if="checkstyle.failed" message="Checkstyle failed - see report for details"/>-->
    </target>

    <target name="-checkstyle-tests" depends="init" description="Validate test code against coding standards">
        <taskdef resource="checkstyletask.properties" classpathref="report.classpath"/>

        <checkstyle config="${etc.dir}/checkstyle-tests.xml" failureProperty="checkstyle.failed" failonviolation="false">
            <fileset dir="${test.dir}" includes="**/*.java"/>
            <fileset dir="${integration.test.dir}" includes="**/*.java"/>
            <formatter type="xml" tofile="${checkstyle-tests.reports.dir}/checkstyle-errors.xml"/>
        </checkstyle>

        <style  in="${checkstyle-tests.reports.dir}/checkstyle-errors.xml"
                out="${checkstyle-tests.reports.dir}/checkstyle.html"
                style="${etc.dir}/checkstyle-noframes.xsl"/>

<!--           <fail if="checkstyle.failed" message="Checkstyle failed - see report for details"/>-->
    </target>

    <!-- ================== Simian target Definitions ======================= -->
    <target name="-simian" depends="init"  description="Do code duplication analysis" >
        <taskdef resource="simiantask.properties" classpathref="report.classpath"/>

        <simian threshold="6" failOnDuplication="false">
            <fileset dir="${main.dir}">
                <include name="**/*.java"/>
            </fileset>
            <formatter type="xml" tofile="${simian.reports.dir}/simian.xml"/>
        </simian>

        <style  in="${simian.reports.dir}/simian.xml"
                out="${simian.reports.dir}/index.html"
                style="${etc.dir}/simian.xsl"/>
    </target>

    <!-- ================== Coverage target Definitions ======================= -->
    <target name="-instrument-main" description="Add JCoverage Instumentation">
        <taskdef name="instrument" classname="com.jcoverage.ant.InstrumentTask" classpathref="report.classpath"/>
        <instrument todir="${instrumented.classes.dir}" classpathref="report.classpath">
            <fileset dir="${classes.dir}">
                <exclude name="Acme/**"/>
            </fileset>
        </instrument>
    </target>

    <target name="-coverage-report" depends="test" description="Generate jCoverage report">
        <available file="jcoverage.ser" property="jcoverage.ser.available"/>
        <fail unless="jcoverage.ser.available" message="jcoverage.ser does not exist. The instrument task must be ran first."/>
        <taskdef name="report" classname="com.jcoverage.ant.CoverageReportTask" classpathref="report.classpath"/>
        <report srcdir="${main.dir}" destdir="${jcoverage.reports.dir}"/>
    </target>

</project>