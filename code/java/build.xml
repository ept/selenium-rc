<project name="selenium" default="all">


    <property name="version" value="unreleased"/>

    <property environment="env"/>
    <property name="ant.home" location="${env.ANT_HOME}"/>
    <property name="reports.dir" location="target/reports" />
    <property name="checkstyle.reports.dir" location="${reports.dir}/checkstyle" />
    <property name="checkstyle-tests.reports.dir" location="${reports.dir}/checkstyle-tests" />
    <property name="simian.reports.dir" location="${reports.dir}/simian" />
    <property name="jcoverage.reports.dir" location="${reports.dir}/jcoverage" />
    <property name="test.reports.dir" location="${reports.dir}/tests" />
    <property name="integration.test.reports.dir" location="${reports.dir}/integration-tests" />
    <property name="test.logs.dir" location="${test.reports.dir}/logs" />
    <property name="integration.test.logs.dir" location="${integration.test.reports.dir}/logs" />
    <property name="main.dir" location="main" />
    <property name="test.dir" location="test" />
    <property name="integration.test.dir" location="integration-test" />
    <property name="etc.dir" location="etc" />
    <property name="lib.dir" location="lib" />
    <property name="report.lib.dir" location="${lib.dir}/report" />
    <property name="classes.dir" location="target/classes" />
    <property name="instrumented.classes.dir" location="target/instrumented-classes" />
    <property name="test.classes.dir" location="target/test-classes" />
    <property name="integration.test.classes.dir" location="target/integration-test-classes" />
	<property name="igor" value="true"/>
    <property name="code_root" value=".."/>
	<path id="report.classpath">
        <fileset dir="${report.lib.dir}"/>
    </path>

    <path id="classpath">
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
        <pathelement location="${classes.dir}"/>
        <pathelement location="${test.classes.dir}"/>
        <pathelement location="${integration.test.classes.dir}"/>
        <pathelement location="${ant.home}/lib"/>
    </path>

    <path id="instrumented.classpath">
        <fileset dir="lib"/>
        <pathelement location="${instrumented.classes.dir}"/>
        <pathelement location="${test.classes.dir}"/>
        <pathelement location="${integration.test.classes.dir}"/>
        <pathelement location="${ant.home}/lib"/>
    </path>

    <target name="build" 
            description="build the software"
            depends="init, compile, jar"/>

    <target name="all" 
            description="default target"
            depends="build, test, integration-test, report"/>
    
    <target name="dist" 
            description="prepare the distribution"
            depends="clean, build">

        <mkdir dir="dist"/>

        <echo file="dist/readme.txt">Only some of these jars are necessary for you to run Selenium. Many are optional. Read the docs!</echo>

        <property name="java.release" value="${ant.project.name}-${version}-java"/>
        <zip destfile="dist/${java.release}.zip">
            <zipfileset dir="target" prefix="${java.release}">
                <include name="${ant.project.name}-${version}.jar"/>
            </zipfileset>
            <zipfileset dir="dist" prefix="${java.release}/lib">
                <include name="readme.txt"/>            
            </zipfileset>
            <zipfileset dir="lib" prefix="${java.release}/lib">
                <include name="*"/>
                <exclude name="junit*"/>
                <exclude name="jmock*"/>
                <exclude name="ant*"/>
            </zipfileset>
            <zipfileset dir="../javascript/" prefix="${java.release}/browser-bot">
                <exclude name="TestRunner.html"/>            
                <exclude name="jsmock/**"/>            
                <exclude name="jsunit/**"/>            
                <exclude name="jsunit-logs/**"/>
                <exclude name="tests/**"/>            
                <exclude name="*.py"/>            
                <exclude name="*.bat"/>            
                <exclude name="build.xml"/>            
                <exclude name="**/web.xml"/>            
            </zipfileset>
            <zipfileset dir="../javascript/Embedded-WEB-INF" prefix="${java.release}/browser-bot/WEB-INF">
                <include name="web.xml"/>
            </zipfileset>
            <zipfileset dir="../../website/webapps/ROOT" prefix="${java.release}/docs">
                <include name="*.html"/>
                <include name="*.png"/>
            </zipfileset>
            <!-- a rename because copied docs are undecorated, index is not really an index -->
            <zipfileset dir="../../website/webapps/ROOT" includes="links.jsp" fullpath="${java.release}/docs/TABLE-OF-CONTENTS.html"/>
        </zip>

        <property name="java.src.release" value="${ant.project.name}-${version}-java-src"/>
        <zip destfile="dist/${java.src.release}.zip">
            <zipfileset dir=".." prefix="${java.src.release}">
                <include name="java/**"/>
                <exclude name="java/target/**"/>
                <exclude name="java/dist/**"/>
            </zipfileset>
            <zipfileset dir=".." prefix="${java.src.release}">
                <include name="javascript/**"/>
            </zipfileset>
        </zip>
        <delete file="dist/readme.txt"/>
  
    </target>

    <target name="clean">
        <delete dir="target"/>
        <delete dir="dist"/>
        <delete file="jcoverage.ser"/>
    </target>

    <target name="init">
        <mkdir dir="${reports.dir}"/>
        <mkdir dir="${checkstyle.reports.dir}"/>
        <mkdir dir="${checkstyle-tests.reports.dir}"/>
        <mkdir dir="${simian.reports.dir}"/>
        <mkdir dir="${jcoverage.reports.dir}"/>
        <mkdir dir="${test.reports.dir}"/>
        <mkdir dir="${integration.test.reports.dir}"/>
        <mkdir dir="${test.logs.dir}"/>
        <mkdir dir="${integration.test.logs.dir}"/>
    </target>

    <target name="compile" description="Compile java source">
        <mkdir dir="${classes.dir}"/>
        <javac destdir="${classes.dir}" classpathref="classpath" debug="on">
            <src location="${main.dir}"/>
        </javac>

        <mkdir dir="${test.classes.dir}"/>
        <javac destdir="${test.classes.dir}" classpathref="classpath" debug="on">
            <src location="${test.dir}"/>
        </javac>

        <mkdir dir="${integration.test.classes.dir}"/>
        <javac destdir="${integration.test.classes.dir}" classpathref="classpath" debug="on">
            <src location="${integration.test.dir}"/>
        </javac>
    </target>

    <target name="test" depends="jcoverage-instrument">
        <junit fork="yes" forkmode="once" printsummary="yes" failureproperty="tests.failed">
            <classpath refid="instrumented.classpath"/>
            <formatter type="xml"/>
            <formatter type="plain" usefile="false"/>
            <batchtest todir="${test.logs.dir}">
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                    <include name="**/*TestCase.java"/> 
                    <exclude name="com/thoughtworks/selenium/SeleniumIntegrationTest.java"/>
                </fileset>
            </batchtest>
        </junit>

        <junitreport todir="${test.reports.dir}">
            <fileset dir="${test.logs.dir}">
                <include name="TEST-*.xml"/>
                <!-- This one is always empty for some reason -->
                <exclude name="TEST-com.thoughtworks.selenium.SeleniumIntegrationTest.xml"/>
            </fileset>
            <report format="frames" todir="${test.reports.dir}" styledir="${ant.home}/etc"/>
        </junitreport>
        <fail if="tests.failed">There were test failures</fail>
    </target>
	
     <!-- could be refactored -->
    <target name="integration-test-mac" depends="compile" if="isMac">
        
        <echo>Integration Tests for Embedded Jetty Web Container</echo>

        <junit fork="yes" forkmode="once" printsummary="yes" failureproperty="tests.failed">
            <jvmarg value="-Dcode_root=${code_root}"/>
            <jvmarg value="-DCATALINA_HOME=${env.CATALINA_HOME}"/>
            <classpath refid="instrumented.classpath"/>
            <formatter type="xml"/>
            <formatter type="plain" usefile="false"/>
            <batchtest todir="${integration.test.logs.dir}">
                <fileset dir="${integration.test.dir}">
                    <include name="**/embedded/**/*Test.java"/>
                    <exclude name="**/Win*"/>
                	<exclude name="**/Lin*"/>
                </fileset>
            </batchtest>
        </junit>

        <fail unless="env.CATALINA_HOME">
        Cannot run Outbedded Integration tests because environment variable CATALINA_HOME is not set.
        Please set CATALINA_HOME to your Tomcat installation directory.
        </fail>

        <echo>Integration Tests for Outbedded Web Container, including those that require Tomcat installed and CATALINA_HOME set.</echo>

        <junit fork="yes" forkmode="once" printsummary="yes" failureproperty="tests.failed">
            <jvmarg value="-Dcode_root=${code_root}"/>
            <jvmarg value="-DCATALINA_HOME=${env.CATALINA_HOME}"/>
            <classpath refid="instrumented.classpath"/>
            <formatter type="xml"/>
            <formatter type="plain"/>
            <batchtest todir="${integration.test.logs.dir}">
                <fileset dir="${integration.test.dir}">
                    <include name="**/outbedded/**/*Test.java"/>
                    <exclude name="**/Win*"/>
                	<exclude name="**/Lin*"/>
                </fileset>
            </batchtest>

        </junit>

    </target>

    <target name="integration-test-windows" depends="compile" if="isWindows">

        <echo>Integration Tests for Embedded Web Container</echo>

        <junit fork="yes" forkmode="once" printsummary="yes" failureproperty="tests.failed">
            <jvmarg value="-Dcode_root=${code_root}"/>
            <jvmarg value="-DCATALINA_HOME=${env.CATALINA_HOME}"/>
            <classpath refid="instrumented.classpath"/>
            <formatter type="xml"/>
            <formatter type="plain"/>
            <batchtest todir="${integration.test.logs.dir}">
                <fileset dir="${integration.test.dir}">
                    <include name="**/embedded/**/Real*Test.java"/>
                    <exclude name="**/Mac*"/>
                	<exclude name="**/Lin*"/>
                </fileset>
            </batchtest>
        </junit>

        <fail unless="env.CATALINA_HOME">
        Cannot run Outbedded Integration tests because environment variable CATALINA_HOME is not set.
        Please set CATALINA_HOME to your Tomcat installation directory.
        </fail>

        <echo>Integration Tests for Outbedded Web Container, including those that require Tomcat installed and CATALINA_HOME set.</echo>

        <junit fork="yes" forkmode="once" printsummary="yes" failureproperty="tests.failed">
            <jvmarg value="-Dcode_root=${code_root}"/>
            <jvmarg value="-DCATALINA_HOME=${env.CATALINA_HOME}"/>
            <classpath refid="instrumented.classpath"/>
            <formatter type="xml"/>
            <formatter type="plain"/>
            <batchtest todir="${integration.test.logs.dir}">
                <fileset dir="${integration.test.dir}">
                    <include name="**/outbedded/**/*Test.java"/>
                    <exclude name="**/Mac*"/>
                	<exclude name="**/Lin*"/>
                </fileset>
            </batchtest>

        </junit>
    </target>
	
	<target name="integration-test-unix" depends="compile" if="isUnix" unless="isMac">

        <echo>Integration Tests for Embedded Web Container</echo>

        <junit fork="yes" forkmode="once" printsummary="yes" failureproperty="tests.failed">
            <jvmarg value="-Dcode_root=${code_root}"/>
            <jvmarg value="-DCATALINA_HOME=${env.CATALINA_HOME}"/>
            <classpath refid="instrumented.classpath"/>
            <formatter type="xml"/>
            <formatter type="plain"/>
            <batchtest todir="${integration.test.logs.dir}">
                <fileset dir="${integration.test.dir}">
                    <include name="**/embedded/**/*Test.java"/>
                    <exclude name="**/Win*"/>
                    <exclude name="**/Mac*"/>
                </fileset>
            </batchtest>
        </junit>

        <fail unless="env.CATALINA_HOME">
        Cannot run Outbedded Integration tests because environment variable CATALINA_HOME is not set.
        Please set CATALINA_HOME to your Tomcat installation directory.
        </fail>

        <echo>Integration Tests for Outbedded Web Container, including those that require Tomcat installed and CATALINA_HOME set.</echo>

        <junit fork="yes" forkmode="once" printsummary="yes" failureproperty="tests.failed">
            <jvmarg value="-Dcode_root=${code_root}"/>
            <jvmarg value="-DCATALINA_HOME=${env.CATALINA_HOME}"/>
            <classpath refid="instrumented.classpath"/>
            <formatter type="xml"/>
            <formatter type="plain"/>
            <batchtest todir="${integration.test.logs.dir}">
                <fileset dir="${integration.test.dir}">
                    <include name="**/outbedded/**/*Test.java"/>
                    <exclude name="**/Win*"/>
               	    <exclude name="**/Mac*"/>
                </fileset>
            </batchtest>

        </junit>
    </target>

	<target name="integration-test-os-test">
    	 <condition property="isMac">
    	      <os family="mac" />
    	 </condition>

        <condition property="isWindows">
            <os family="windows" />
        </condition>
        	
	    <condition property="isUnix">
	       <os family="unix" />
	     </condition>	

	</target>
	
    <target name="integration-test" depends="compile, integration-test-os-test, integration-test-unix, integration-test-mac, integration-test-windows" >

        <junitreport todir="${integration.test.reports.dir}">
            <fileset dir="${integration.test.logs.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${integration.test.reports.dir}" styledir="${ant.home}/etc"/>
        </junitreport>
        <fail if="tests.failed">There were test failures</fail>

    </target>

    <target name="jar" depends="compile" description="Jar java classes">
        <jar basedir="target/classes" destfile="target/${ant.project.name}-${version}.jar"/>
    </target>

    <target name="report" 
            description="generate code-quality reports"
            depends="checkstyle, simian, jcoverage"/>

    <!-- ================== Checkstyle target Definitions ======================= -->

    <target name="checkstyle" 
            description="Validate code against coding standards"
            depends="checkstyle-main, checkstyle-tests" />
            
    <target name="checkstyle-main" 
            depends="init" >

        <taskdef resource="checkstyletask.properties" classpathref="report.classpath"/>

        <checkstyle config="${etc.dir}/checkstyle-main.xml" 
                    failureProperty="checkstyle.failed" 
                    failonviolation="false">
            <fileset dir="${main.dir}">
                <exclude name="Acme/**"/>
                <include name="**/*.java"/>
            </fileset>
            <formatter type="xml" tofile="${checkstyle.reports.dir}/checkstyle-main-errors.xml"/>
        </checkstyle>

        <style  in="${checkstyle.reports.dir}/checkstyle-main-errors.xml"
                out="${checkstyle.reports.dir}/checkstyle.html"
                style="${etc.dir}/checkstyle-noframes.xsl"/>

        <!--           <fail if="checkstyle.failed" message="Checkstyle failed - see report for details"/>-->
    </target>

    <target name="checkstyle-tests" 
            depends="init">

        <taskdef resource="checkstyletask.properties" classpathref="report.classpath"/>

        <checkstyle config="${etc.dir}/checkstyle-tests.xml" 
                    failureProperty="checkstyle.failed" 
                    failonviolation="false">
            <fileset dir="${test.dir}" includes="**/*.java"/>
            <fileset dir="${integration.test.dir}" includes="**/*.java"/>
            <formatter type="xml" tofile="${checkstyle-tests.reports.dir}/checkstyle-errors.xml"/>
        </checkstyle>

        <style  in="${checkstyle-tests.reports.dir}/checkstyle-errors.xml"
                out="${checkstyle-tests.reports.dir}/checkstyle.html"
                style="${etc.dir}/checkstyle-noframes.xsl"/>

<!--           <fail if="checkstyle.failed" message="Checkstyle failed - see report for details"/>-->
    </target>

    <!-- ================== Simian target Definitions ======================= -->
    <target name="simian" depends="init" 
            description="Do code duplication analysis" >
        <taskdef resource="simiantask.properties" classpathref="report.classpath"/>

        <simian threshold="6" failOnDuplication="false">
            <fileset dir="${main.dir}">
                <include name="**/*.java"/>
            </fileset>
            <formatter type="xml" tofile="${simian.reports.dir}/simian.xml"/>
        </simian>

        <style  in="${simian.reports.dir}/simian.xml"
                out="${simian.reports.dir}/index.html"
                style="${etc.dir}/simian.xsl"/>
    </target>

    <!-- ================== Coverage target Definitions ======================= -->

    <!-- Add JCoverage Instumentation -->
    <target name="jcoverage-instrument" depends="compile">
        <taskdef name="instrument" classname="com.jcoverage.ant.InstrumentTask" classpathref="report.classpath"/>
        <instrument todir="${instrumented.classes.dir}" classpathref="report.classpath">
            <fileset dir="${classes.dir}">
                <exclude name="Acme/**"/>
            </fileset>
        </instrument>
    </target>

    <target name="jcoverage" depends="test" description="Generate jCoverage report">
        <available file="jcoverage.ser" property="jcoverage.ser.available"/>
        <fail unless="jcoverage.ser.available" message="jcoverage.ser does not exist. The instrument task must be ran first."/>
        <taskdef name="report" classname="com.jcoverage.ant.CoverageReportTask" classpathref="report.classpath"/>
        <report srcdir="${main.dir}" destdir="${jcoverage.reports.dir}"/>
    </target>
	
    <target name="set">
        <property name="mac.os" value="true"/>
        <property name="win.os" value="true"/>
        
    </target>

    <target name="cond" depends="set, cond-if"/>
    
    <target name="cond-if" if="mac.os">
        <antcall target="cond-if-2"/>
    </target>
    
    <target name="cond-if-2" if="win.os">
        <antcall target="cond-if-3"/>
    </target>
    
    <target name="cond-if-3" unless="linux.os">
        <echo message="yes"/>
    </target>
	
</project>
