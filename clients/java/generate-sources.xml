<project name="java-client-driver-generate-sources" default="generate-sources">
	
	<property name="dir.java.tests.based.on.core.javascript" location="${maven.src.path}/../../../../../test/java/com/thoughtworks/selenium/corebased" />
	<property name="dir.java.tests.based.on.core.javascript.later.modified.by.hand" location="${dir.java.tests.based.on.core.javascript}/../corebasedhandmodified" />
	
	
	<target name="clean-sources">
		<delete file="${maven.src.path}/Selenium.java" />
		<delete file="${maven.src.path}/DefaultSelenium.java" />
        <delete dir="${dir.java.tests.based.on.core.javascript}" />
	</target>
	
	<target name="generate-sources" depends="generate-client, generate-tests" />
	
    <target name="generate-tests" depends="extract-jar" unless="skip.generation.true">
		<condition property="build.failed">
			<not><available file="${core.javascript.path}" /></not>
		</condition>
		<fail if="build.failed" message="Couldn't find JavaScript: ${core.javascript.path}" />
		<property name="dir.core.tests" location="${core.javascript.path}/tests" />
		<echo message="maven.src.path = ${maven.src.path}" />
        <mkdir  dir="${dir.java.tests.based.on.core.javascript}" />
        <java classname="org.openqa.selenium.server.testgenerator.XlateHtmlSeleneseToJava" fork="true" failonerror="true">
            <arg value="${dir.java.tests.based.on.core.javascript}"/>
            <arg value="-silent"/>
            <arg value="-dontThrowOnTranslationDifficulties"/>
            <arg value="-dir"/>
            <arg value="${dir.core.tests}"/>
            
            <arg value="-skip"/>
            <arg value="TestJS-for-loops.html"/>
            
            
            <arg value="-skip"/>
            <arg value="TestJS-functions.html"/>
            
            
            <arg value="-skip"/>
            <arg value="TestJS-if-then-else.html"/>
            
            <classpath refid="depend.classpath"/>
        </java>
        
        <copy overwrite="true" todir="${dir.java.tests.based.on.core.javascript}">
            <fileset dir="${dir.java.tests.based.on.core.javascript.later.modified.by.hand}">
                <include name="**/*.java.txt"/>
            </fileset>
            <mapper>
                <globmapper from="*.java.txt" to="*.java"/>
            </mapper>
        </copy>
	</target>
	
	<target name="generate-tests2" depends="extract-jar" unless="skip.generation.true">
		<condition property="build.failed">
			<not><available file="${core.javascript.path}" /></not>
		</condition>
		<fail if="build.failed" message="Couldn't find JavaScript: ${core.javascript.path}" />
		<property name="dir.core.tests" location="${core.javascript.path}/tests" />
		<echo message="maven.src.path = ${maven.src.path}" />
        <mkdir  dir="${dir.java.tests.based.on.core.javascript}" />
        <typedef name="xlate" classname="org.openqa.selenium.XlatorTask" />
        <xlate formatter="java-rc" destDir="${dir.java.tests.based.on.core.javascript}">
        	<fileset dir="${dir.core.tests}" includes="*.html" excludes="*Suite*"/>
        </xlate>
	</target>
	
	<target name="generate-client" depends="extract-jar" unless="skip.generation.true">
		<xslt in="${iedoc.xml}" out="${maven.src.path}/Selenium.java" style="iedoc2java.xml">
			<param name="mode" expression="interface" />
		</xslt>
		<xslt in="${iedoc.xml}" out="${maven.src.path}/DefaultSelenium.java" style="iedoc2java.xml">
			<param name="mode" expression="implementation" />
		</xslt>
	</target>
	
	<target name="extract-jar" depends="maybe-skip-generation" unless="skip.generation.true">
		<fail unless="output.path" message="output.path was not set.  This ant script must be run from within Maven!" />
		<fail unless="maven.src.path" message="maven.src.path was not set.  This ant script must be run from within Maven!" />
		<fail message="maven.src.path could not be found: ${maven.src.path}">
			<condition>
				<not><available file="${maven.src.path}" /></not>
			</condition>
		</fail>
		<mkdir dir="${output.path}" />
		<echo message="${depend.maven.path}" />
		<echo message="${depend.maven.path}" file="${output.path}/path.txt" />
		<loadfile property="depend.classpath.str" srcfile="${output.path}/path.txt">
			<filterchain>
				<tokenfilter>
					<replaceregex pattern="^.*\[(.*)\]" replace="\1" />
				</tokenfilter>
				<tokenfilter>
					<replaceregex pattern=", " replace=";" flags="g" />
				</tokenfilter>
			</filterchain>
		</loadfile>
		<echo message="depend.classpath.str = ${depend.classpath.str}" />
		<path id="depend.classpath">
			<pathelement path="${depend.classpath.str}" />
		</path>
		<pathconvert property="depend.classpath.output" refid="depend.classpath" />
		<echo message="depend.classpath.output = ${depend.classpath.output}" />
		<whichresource resource="/core/iedoc.xml" property="iedoc.url" classpath="${depend.classpath.output}"/>
		<fail unless="iedoc.url" message="Couldn't find iedoc.xml in the classpath: ${depend.classpath.output}" />
		<echo message="${iedoc.url}" file="${output.path}/url.txt" />
		<loadfile property="selenium-server.jar.file" srcfile="${output.path}/url.txt">
			<filterchain>
				<tokenfilter>
					<replaceregex pattern="^jar:file:/(.*)!.*" replace="\1" />
				</tokenfilter>
				<tokenfilter>
					<replaceregex pattern="%20" replace=" " flags="g" />
				</tokenfilter>
			</filterchain>
		</loadfile>
		<property name="selenium-server.jar" location="${selenium-server.jar.file}" />
		<echo message="selenium-server.jar = ${selenium-server.jar}" />
		<property name="core.javascript.path" location="${output.path}/selenium-server" />
		<mkdir dir="${core.javascript.path}" />
		<unzip src="${selenium-server.jar}" dest="${core.javascript.path}" />
		<property name="iedoc.xml" location="${core.javascript.path}/core/iedoc.xml" />
	</target>
	
	<target name="maybe-skip-generation" if="skip.generation">
		<condition property="skip.generation.true">
			<istrue value="${skip.generation}" />
		</condition>
	</target>
	
</project>