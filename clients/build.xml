<project name="selenium-rc-clients" default="dist" xmlns:maven="urn:maven-artifact-ant">

    <property name="version" value="0.7-SNAPSHOT"/>
    <condition property="website.root" value="${ant.file.selenium-rc-clients}/../../website">
        <available file="${ant.file.selenium}/../../website"/>
    </condition>

	<target name="all" depends="test, dist" />

    <target name="clean" depends="clean-dotnet">
        <delete dir="dist-image"/>
        <delete dir="dist"/>
    </target>

    <target name="dist" depends="dist-image-doc, dist-dotnet, dist-ruby, dist-python"/>

    <target name="dist-dirs">
        <mkdir dir="dist-image"/>
        <mkdir dir="dist-image/doc"/>	<!-- needed when website.root is not set -->
        <mkdir dir="dist"/>
    </target>

    <target name="dist-image-doc" depends="dist-dirs" if="website.root">
        <copy todir="dist-image/doc">
            <fileset dir="${website.root}">
                <include name="*.html"/>
                <include name="images/*.png"/>
                <exclude name="demos.html"/>
                <exclude name="download.html"/>
                <exclude name="testrunner.html"/>
                <!--<exclude name="FAQ.html"/>
                <exclude name="seleniumReference.html"/>-->
            </fileset>
        </copy>
        <!-- TODO Put the Javadoc in there! -->
    </target>

    <target name="dist-ruby" depends="dist-image-doc">
        <copy todir="dist-image/ruby">
            <fileset dir="ruby">
                <include name="*.rb"/>
                <exclude name="readme.txt"/>
            </fileset>
        </copy>

        <property name="ruby.release" value="selenium-ruby-client-driver-${version}"/>
        <zip zipfile="dist/${ruby.release}.zip">
            <zipfileset dir="dist-image/doc" prefix="${ruby.release}/doc"/>
            <zipfileset dir="dist-image/ruby" prefix="${ruby.release}/ruby"/>
            <zipfileset file="ruby/readme.txt" prefix="${ruby.release}"/>
        </zip>
    </target>

	<target name="dist-python" depends="dist-image-doc">
        <copy todir="dist-image/python">
            <fileset dir="python">
                <include name="*.py"/>
                <exclude name="readme.txt"/>
            </fileset>
        </copy>

        <property name="python.release" value="selenium-python-client-driver-${version}"/>
        <zip zipfile="dist/${python.release}.zip">
            <zipfileset dir="dist-image/doc" prefix="${python.release}/doc"/>
            <zipfileset dir="dist-image/python" prefix="${python.release}/python"/>
            <zipfileset file="python/readme.txt" prefix="${python.release}"/>
        </zip>
    </target>

	<target name="maven-tasks">
		<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant">
			<classpath>
				<pathelement location="maven-artifact-ant-2.0.2-dep.jar" />
			</classpath>
		</typedef>
	</target>
	
	<target name="custom-repo" depends="maven-tasks" if="custom.maven.repo">
		<presetdef name="mavendeps">
			<maven:dependencies>
				<localRepository location="${custom.maven.repo}" />
			</maven:dependencies>
		</presetdef>
	</target>
	
	<target name="default-repo" depends="maven-tasks" unless="custom.maven.repo">
		<presetdef name="mavendeps">
			<maven:dependencies/>
		</presetdef>
	</target>

    <target name="start-server" depends="custom-repo,default-repo">
		<mavendeps pathId="selenium-server.classpath">
			<!-- DGF Server bundles all of its dependencies, 
			which are marked with the scope "provided", so this should
			only give us selenium-server.jar -->
			<dependency groupId="org.openqa.selenium.server" artifactId="selenium-server" version="1.0-SNAPSHOT" scope="runtime"/>
		</mavendeps>
		<pathconvert targetos="windows" property="selenium-server.jar" refid="selenium-server.classpath" />
		<condition property="build.failed">
			<contains string="${selenium-server.jar}" substring=";" />
		</condition>
		<fail if="build.failed" message="Maven gave us more than one Selenium Server jar: ${selenium-server.jar}" />
		
		<!-- Configurable server default firefox location; if this doesn't work, we'll just try to run it off the path -->
		<property name="firefox.location" location="c:\program files\mozilla firefox\firefox.exe" />
		<java jar="${selenium-server.jar}" fork="true" spawn="true">
			<sysproperty key="firefoxDefaultPath" file="${firefox.location}" />
		</java>
		<echo message="Starting: ${selenium-server.jar}" />
    </target>
    
    <target name="stop-server">
    	<get taskname="selenium-shutdown" src="http://localhost:4444/selenium-server/driver/?commandRequest=|shutDown|||" dest="result.txt" ignoreerrors="true" />
    	<echo taskname="selenium-shutdown" message="DGF Errors during shutdown are expected" />
    </target>
    
    <target name="test" depends="test-dotnet, test-ruby, test-python"/>
    
    <target name="test-python">
    	<echo message="python executable = ${python.executable}" />
        <ant dir="python" target="all"/>
    </target>
    
    <target name="clean-dotnet">
        <ant dir="dotnet" target="clean"/>
    </target>
        
    <target name="test-dotnet">
        <ant dir="dotnet" target="test"/>
    </target>
        
    <target name="dist-dotnet">
		<ant dir="dotnet" target="dist"/>
		<copy todir="dist">
			<fileset dir="dotnet/dist" />
		</copy>
	</target>
	
    <target name="test-ruby">
        <ant dir="ruby" target="all"/>
    </target>

</project>
